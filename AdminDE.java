/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tallerpablobel;

import java.awt.Color;
import java.sql.*;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author pablo
 */
public class AdminDE extends javax.swing.JFrame {
    int idioma=1;
    String URL = "jdbc:mysql://localhost:3306/pablobel?useSSL=false&useTimezone=true&serverTimezone=UTC&allowPublicKeyRetrieval=true";
    int xMouse;
    int yMouse;
    boolean arreglosHacer = false;
    boolean arreglosTerminados = false;
    boolean ingresarCoche = false;

    /**
     * Creates new form Admin
     */
    public AdminDE() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        drag = new javax.swing.JPanel();
        cerrar = new javax.swing.JLabel();
        arreglosPorHacer = new javax.swing.JButton();
        ingresarNuevoCoche = new javax.swing.JButton();
        arreglosYaTerminados = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        texto = new javax.swing.JTextArea();
        matriculaTerminada = new javax.swing.JTextField();
        buscar = new javax.swing.JButton();
        terminado = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 153, 255));

        drag.setBackground(new java.awt.Color(0, 153, 255));
        drag.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                dragMouseDragged(evt);
            }
        });
        drag.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dragMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout dragLayout = new javax.swing.GroupLayout(drag);
        drag.setLayout(dragLayout);
        dragLayout.setHorizontalGroup(
            dragLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 902, Short.MAX_VALUE)
        );
        dragLayout.setVerticalGroup(
            dragLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        cerrar.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        cerrar.setForeground(new java.awt.Color(0, 0, 0));
        cerrar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cerrar.setText("X");
        cerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cerrarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cerrarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cerrarMouseExited(evt);
            }
        });

        arreglosPorHacer.setText("MUSS REPARIERT WERDEN");
        arreglosPorHacer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                arreglosPorHacerMouseClicked(evt);
            }
        });
        arreglosPorHacer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arreglosPorHacerActionPerformed(evt);
            }
        });

        ingresarNuevoCoche.setText("AUTO HINFÜGEN");
        ingresarNuevoCoche.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ingresarNuevoCocheMouseClicked(evt);
            }
        });
        ingresarNuevoCoche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresarNuevoCocheActionPerformed(evt);
            }
        });

        arreglosYaTerminados.setText("REPARIERTE AUTOS");
        arreglosYaTerminados.setActionCommand("REPARIERTE AUTOS");
        arreglosYaTerminados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                arreglosYaTerminadosMouseClicked(evt);
            }
        });
        arreglosYaTerminados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arreglosYaTerminadosActionPerformed(evt);
            }
        });

        texto.setBackground(new java.awt.Color(255, 255, 255));
        texto.setColumns(20);
        texto.setRows(5);
        jScrollPane1.setViewportView(texto);

        matriculaTerminada.setBackground(new java.awt.Color(102, 102, 102));
        matriculaTerminada.setForeground(new java.awt.Color(0, 0, 0));
        matriculaTerminada.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        matriculaTerminada.setText("KENNZEICHEN HINFÜGEN");
        matriculaTerminada.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                matriculaTerminadaMouseClicked(evt);
            }
        });
        matriculaTerminada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matriculaTerminadaActionPerformed(evt);
            }
        });

        buscar.setBackground(new java.awt.Color(102, 102, 102));
        buscar.setForeground(new java.awt.Color(0, 0, 0));
        buscar.setText("FINDEN");
        buscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buscarMouseClicked(evt);
            }
        });

        terminado.setBackground(new java.awt.Color(102, 102, 102));
        terminado.setForeground(new java.awt.Color(0, 0, 0));
        terminado.setText("FERTIG");
        terminado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                terminadoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(matriculaTerminada, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(terminado, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 764, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(arreglosPorHacer, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(arreglosYaTerminados, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(95, 95, 95)
                        .addComponent(ingresarNuevoCoche, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(130, 130, 130))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(cerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(drag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(drag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(arreglosPorHacer, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ingresarNuevoCoche, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arreglosYaTerminados, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(matriculaTerminada, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(terminado, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dragMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dragMouseClicked
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_dragMouseClicked

    private void dragMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dragMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_dragMouseDragged

    private void cerrarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cerrarMouseEntered
        cerrar.setForeground(Color.white);
    }//GEN-LAST:event_cerrarMouseEntered

    private void cerrarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cerrarMouseExited
        cerrar.setForeground(Color.black);
    }//GEN-LAST:event_cerrarMouseExited

    private void cerrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cerrarMouseClicked
        System.exit(0);
    }//GEN-LAST:event_cerrarMouseClicked

    private void ingresarNuevoCocheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresarNuevoCocheActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresarNuevoCocheActionPerformed

    private void arreglosYaTerminadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arreglosYaTerminadosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_arreglosYaTerminadosActionPerformed

    private void arreglosPorHacerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_arreglosPorHacerMouseClicked
        texto.setText("");

        String URL = "jdbc:mysql://localhost:3306/pablobel?useSSL=false&useTimezone=true&serverTimezone=UTC&allowPublicKeyRetrieval=true";
        String SQL_SELECT = "SELECT * FROM coche LEFT JOIN telefono ON coche.matricula = telefono.matricula";
        List<Coche> coches = new ArrayList<>();

        try {
            Connection conn = DriverManager.getConnection(URL, "root", "admin");
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(SQL_SELECT);
            while (rs.next()) {
                coches.add(new Coche(
                        rs.getString("matricula"),
                        rs.getString("duenyo"),
                        rs.getInt("telefono"),
                        rs.getString("modelo"),
                        rs.getString("marca"),
                        rs.getString("averia")
                )
                );
            }
            rs.close();
            stmt.close();
            conn.close();

        } catch (SQLException ex) {
            Logger.getLogger(AdminDE.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (Coche c : coches) {
            texto.append("Matricula: " + c.getMatricula());
            texto.append("  Dueño: " + c.getDuenyo());
            texto.append("  Telefono: " + c.getTelefono() + "\n");

        }

    }//GEN-LAST:event_arreglosPorHacerMouseClicked

    private void ingresarNuevoCocheMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ingresarNuevoCocheMouseClicked
        
        if(Login.idioma==3 || idioma==3){
        new FormularioCoche().setVisible(true);
        }
        else if(Login.idioma==1|| idioma==1){
            new AutoFormular().setVisible(true);
        }
        else if (Login.idioma ==2|| idioma==2){
            new CarForm().setVisible(true);
        }
    }//GEN-LAST:event_ingresarNuevoCocheMouseClicked

    private void matriculaTerminadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matriculaTerminadaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_matriculaTerminadaActionPerformed

    private void matriculaTerminadaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_matriculaTerminadaMouseClicked

        if (matriculaTerminada.getText().equals("INSERTA MATRICULA")) {
            matriculaTerminada.setText("");
        }
    }//GEN-LAST:event_matriculaTerminadaMouseClicked

    private void buscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buscarMouseClicked
        texto.setText("");

        String URL = "jdbc:mysql://localhost:3306/pablobel?useSSL=false&useTimezone=true&serverTimezone=UTC&allowPublicKeyRetrieval=true";
        String SQL_SELECT = "SELECT * FROM coche LEFT JOIN telefono ON coche.matricula = telefono.matricula WHERE coche.matricula ='" + matriculaTerminada.getText() + "'";
        Coche coche1 = null;

        try {
            Connection conn = DriverManager.getConnection(URL, "root", "admin");
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(SQL_SELECT);
            while (rs.next()) {
                coche1 = new Coche(
                        rs.getString("matricula"),
                        rs.getString("duenyo"),
                        rs.getInt("telefono"),
                        rs.getString("modelo"),
                        rs.getString("marca"),
                        rs.getString("averia"));
            }
            rs.close();
            stmt.close();
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(AdminDE.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(coche1);
        texto.append("Matricula: " + coche1.getMatricula() + "\n");
        texto.append("Dueño: " + coche1.getDuenyo() + "\n");
        texto.append("Telefono: " + coche1.getTelefono() + "\n");
        texto.append("Modelo: " + coche1.getModelo() + "\n");
        texto.append("Marca: " + coche1.getMarca() + "\n");
        texto.append("Avería:\n\n\t " + coche1.getAveria() + "\n");
    }//GEN-LAST:event_buscarMouseClicked

    private void arreglosYaTerminadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_arreglosYaTerminadosMouseClicked
        texto.setText("");
        String SQL_SELECT = "SELECT * FROM arreglo_terminado";
        List<Coche> cochesTerminados = new ArrayList<>();

        try {
            Connection conn = DriverManager.getConnection(URL, "root", "admin");
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(SQL_SELECT);
            while (rs.next()) {
                cochesTerminados.add(new Coche(
                        rs.getString("matricula"),
                        rs.getString("duenyo"),
                        rs.getString("modelo"),
                        rs.getString("marca"),
                        rs.getString("averia")
                )
                );
            }
            for (Coche c : cochesTerminados) {
                texto.append("Matricula: " + c.getMatricula());
                texto.append("  Dueño: " + c.getDuenyo());
                texto.append("  Modelo: " + c.getModelo());
                texto.append("  Marca: " + c.getMarca() + "\n");
            }
        } catch (SQLException ex) {
            Logger.getLogger(AdminDE.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_arreglosYaTerminadosMouseClicked

    private void terminadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_terminadoMouseClicked
        texto.setText("");

        Coche cocheTerminado = null;
        String SQL_SELECT = "SELECT * FROM coche WHERE matricula = '" + matriculaTerminada.getText() + "'";
        String SQL_INSERT = "INSERT INTO arreglo_terminado (matricula, duenyo, modelo, marca, averia) VALUES (?,?,?,?,?)";
        String SQL_DELETE = "DELETE FROM coche WHERE matricula = ?";
        //METER ESTO EN UNA LISTA EN EL CODIGO DE ARRIBA

        try {
            Connection conn = DriverManager.getConnection(URL, "root", "admin");
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(SQL_SELECT);
            while (rs.next()) {
                cocheTerminado = new Coche(
                        rs.getString("matricula"),
                        rs.getString("duenyo"),
                        rs.getString("modelo"),
                        rs.getString("marca"),
                        rs.getString("averia"));
            }
            System.out.println(cocheTerminado);
            rs.close();
            stmt.close();
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(AdminDE.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            Connection conn = DriverManager.getConnection(URL, "root", "admin");
            PreparedStatement stmt = conn.prepareStatement(SQL_INSERT);
            stmt.setString(1, cocheTerminado.getMatricula());
            stmt.setString(2, cocheTerminado.getDuenyo());
            stmt.setString(3, cocheTerminado.getModelo());
            stmt.setString(4, cocheTerminado.getMarca());
            stmt.setString(5, cocheTerminado.getAveria());
            stmt.execute();

            stmt.close();
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(AdminDE.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            Connection conn = DriverManager.getConnection(URL, "root", "admin");
            PreparedStatement stmt = conn.prepareStatement(SQL_DELETE);
            stmt.setString(1, matriculaTerminada.getText());
            stmt.executeUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(AdminDE.class.getName()).log(Level.SEVERE, null, ex);
        }
        String SQL_SELECT_TERMINADO_REFRESH = "SELECT * FROM coche LEFT JOIN telefono ON coche.matricula = telefono.matricula";
        List<Coche> coches = new ArrayList<>();

        try {
            Connection conn = DriverManager.getConnection(URL, "root", "admin");
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(SQL_SELECT_TERMINADO_REFRESH);
            while (rs.next()) {
                coches.add(new Coche(
                        rs.getString("matricula"),
                        rs.getString("duenyo"),
                        rs.getInt("telefono"),
                        rs.getString("modelo"),
                        rs.getString("marca"),
                        rs.getString("averia")
                )
                );
            }
            rs.close();
            stmt.close();
            conn.close();

        } catch (SQLException ex) {
            Logger.getLogger(AdminDE.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (Coche c : coches) {
            texto.append("Matricula: " + c.getMatricula());
            texto.append("  Dueño: " + c.getDuenyo());
            texto.append("  Telefono: " + c.getTelefono() + "\n");

        }
    }//GEN-LAST:event_terminadoMouseClicked

    private void arreglosPorHacerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arreglosPorHacerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_arreglosPorHacerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminDE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminDE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminDE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminDE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminDE().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton arreglosPorHacer;
    private javax.swing.JButton arreglosYaTerminados;
    private javax.swing.JButton buscar;
    private javax.swing.JLabel cerrar;
    private javax.swing.JPanel drag;
    private javax.swing.JButton ingresarNuevoCoche;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField matriculaTerminada;
    private javax.swing.JButton terminado;
    private javax.swing.JTextArea texto;
    // End of variables declaration//GEN-END:variables
}
